/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

/**
 *
 * @author geniu
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        label2 = new java.awt.Label();
        label4 = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        label5 = new java.awt.Label();
        jScrollPane3 = new javax.swing.JScrollPane();
        Log = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(229, 229, 226));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label3.setName(""); // NOI18N
        label3.setText("Ceaser cipher");
        jPanel1.add(label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 150, 41));

        jTextField1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Key");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deleteKeyWord(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keyFoucusLost(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 80, 40));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setToolTipText("");
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 150, -1));

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setBackground(new java.awt.Color(153, 255, 153));
        label2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label2.setName(""); // NOI18N
        label2.setText("Cipher Text");
        jPanel1.add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 150, 41));

        label4.setAlignment(java.awt.Label.CENTER);
        label4.setBackground(new java.awt.Color(153, 255, 153));
        label4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label4.setMinimumSize(new java.awt.Dimension(106, 26));
        label4.setName(""); // NOI18N
        label4.setText("Plain Text");
        jPanel1.add(label4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 150, 41));

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("Decrypt");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 131, 44));

        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("Encrypt");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 131, 44));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 153, 0));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 320, 150));

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("Attack Cipher Text");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, 180, 54));

        label5.setAlignment(java.awt.Label.CENTER);
        label5.setBackground(new java.awt.Color(153, 255, 153));
        label5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label5.setName(""); // NOI18N
        label5.setText("Log");
        jPanel1.add(label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, 50, 41));

        Log.setColumns(20);
        Log.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Log.setRows(5);
        jScrollPane3.setViewportView(Log);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 440, 130));

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(153, 0, 0));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 350, 150));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteKeyWord(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deleteKeyWord
        // TODO add your handling code here:
        if (jTextField1.getText().toString().equals("Key")) {
            jTextField1.setText("");
        }

    }//GEN-LAST:event_deleteKeyWord

    private void keyFoucusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyFoucusLost
        // TODO add your handling code here:
        if (jTextField1.getText().toString().equals("")) {
            jTextField1.setText("Key");
        }
    }//GEN-LAST:event_keyFoucusLost

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        // cheack valid of input and key
        try {
            int key = Integer.parseInt(jTextField1.getText().toString());
            if (key <= 0 || key > 25) {
                Log.setText(Log.getText().toString() + "Invalid Key,... Try again\n");
            } else {
                String plainText = "", cipherText = "";
                plainText = jTextArea1.getText().toString();
                char chars[] = plainText.toCharArray();
                for (int i = 0; i < chars.length; i++) {
                    if ((int) chars[i] < (int) 'A' || ((int) chars[i] < (int) 'a') && ((int) chars[i] > (int) 'Z') || (int) chars[i] > (int) 'z') {
                        cipherText += chars[i];
                        continue;
                    }
                    if ((int) (chars[i]) < 91) {
                        cipherText += (char) (((int) chars[i] + key - 65) % 26 + 65) + "";
                    } else {
                        cipherText += (char) (((int) chars[i] + key - 97) % 26 + 97) + "";
                    }
                }
                jTextArea2.setText(cipherText);
                Log.setText(Log.getText().toString() + "Successfully encrypted <3\n");
            }
        } catch (NumberFormatException e) {
            Log.setText(Log.getText().toString() + "Invalid Key,... Try again\n");
        }

        //encrypt
        //show cipher text
        // inform user
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        int temp = 0;
        try {
            int key = Integer.parseInt(jTextField1.getText().toString());
            if (key <= 0 || key > 25) {
                Log.setText(Log.getText().toString() + "Invalid Key,... Try again\n");
            } else {
                String plainText = "", cipherText = "";
                cipherText = jTextArea2.getText().toString();
                char chars[] = cipherText.toCharArray();
                chars = cipherText.toCharArray();

                for (int i = 0; i < chars.length; i++) {
                    if ((int) chars[i] < (int) 'A' || ((int) chars[i] < (int) 'a') && ((int) chars[i] > (int) 'Z') || (int) chars[i] > (int) 'z') {
                        plainText += chars[i];
                        continue;
                    }
                    if ((int) (chars[i]) < 91) {
                        temp = (((int) chars[i] - key - 65));
                        if (temp < 0) {
                            temp += 26;
                        }
                        plainText += (char) (temp % 26 + 65) + "";
                    } else {
                        temp = (((int) chars[i] - key - 97));
                        if (temp < 0) {
                            temp += 26;
                        }
                        plainText += (char) (temp % 26 + 97) + "";
                    }

                }
                jTextArea1.setText(plainText);
                Log.setText(Log.getText().toString() + "Successfully decrypted <3\n");
            }
        } catch (NumberFormatException e) {
            Log.setText(Log.getText().toString() + "Invalid Key,... Try again\n");
        }
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        int temp = 0;
        int key = 1;
        while(key != 26){
                String plainText = "", cipherText = "";
                cipherText = jTextArea2.getText().toString();
                char chars[] = cipherText.toCharArray();
                chars = cipherText.toCharArray();

                for (int i = 0; i < chars.length; i++) {
                    if ((int) chars[i] < (int) 'A' || ((int) chars[i] < (int) 'a') && ((int) chars[i] > (int) 'Z') || (int) chars[i] > (int) 'z') {
                        plainText += chars[i];
                        continue;
                    }
                    if ((int) (chars[i]) < 91) {
                        temp = (((int) chars[i] - key - 65));
                        if (temp < 0) {
                            temp += 26;
                        }
                        plainText += (char) (temp % 26 + 65) + "";
                    } else {
                        temp = (((int) chars[i] - key - 97));
                        if (temp < 0) {
                            temp += 26;
                        }
                        plainText += (char) (temp % 26 + 97) + "";
                    }

                }
                jTextArea1.setText(plainText);
                Log.setText(Log.getText().toString() + key +" : "+ plainText+"\n");
                plainText = "";
                key ++;
            }
        

    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Log;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    // End of variables declaration//GEN-END:variables
}
